openapi: 3.0.1
info:
  title: ZHistLex Bibliography API
  version: 0.0.1
  license:
    name: CreativeCommons Attribution 4.0 International (CC BY 4.0)
    url: 'https://creativecommons.org/licenses/by/4.0/'
  contact:
    name: ZHistLex – eHumanities Centre for Historical Lexikography (Work Package 2)
    url: 'http://zhistlex.de/'
  description: |
    # Overview


    This API specification describes the webservice for accessing 
    bibliographies used by the ZHistLex project. 


    # Design Principles


    … TODO
servers:
  - url: 'http://zhistlex.de/api'
    description: ''
tags:
  - name: General Functions
    description: ''
  - name: Retrieving Content
    description: ''
paths:
  /:
    get:
      operationId: aboutInfo
      summary: |
        Provides general information about the API.
      tags:
        - General Functions
      responses:
        '200':
          description: |
            OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webserviceMetadata'
            text/html:
              schema:
                $ref: '#/components/schemas/renderedResponse'
            application/xhtml+xml:
              schema:
                $ref: '#/components/schemas/renderedResponse'
        default:
          $ref: '#/components/responses/unexpectedError'
  '/records{properties}':
    get:
      operationId: getRecords
      summary: |
        Returns all bibliographical record with the specified `properties`.
      tags:
        - Retrieving Content
      parameters:
        - $ref: '#/components/parameters/properties'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: |
            Ok.
          content:
            'application:json':
              schema:
                $ref: '#/components/schemas/listOfRecords'
            'text/html':
              schema:
                $ref: '#/components/schemas/renderedResponse'
            'application/xhtml+xml':
              schema:
                $ref: '#/components/schemas/renderedResponse'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        default:
          $ref: '#/components/responses/unexpectedError'
components:
  parameters:
    limit:
      name: limit
      in: query
      description: |
        Specifies the maximum number of records to be returned. Implementations are free to override the value of `limit` to match site-specific restrictions.
      required: false
      schema:
        type: integer
        minimum: 0
        default: 10
    offset:
      name: offset
      in: query
      description: |
        Specifies the index of the requested `record` within a `listOfRecords`.
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
    properties:
      name: properties
      in: path
      description: |
        Specifies the properties of bibliographical records.
      required: true
      style: matrix
      explode: true
      schema:
        type: object
        description: |
          Represents a set of properties for bibliographical records. All
          properties may be freely combined. Implementations should consider
          contradicting properties (such as a author names that do not
          correspond to a given title) as specifications for non-existing
          records.
        properties:
          fulltext:
            type: string
            description: |
              Specifies a full text search term for searches across all
              bibliographical fields.
            example: null
          regex:
            type: string
            description: |
              Specifies a regular expression based search term for searches
              across all bibliographical fields.
            example: null
          type:
            type: string
            description: |
              Specifies the type of work.
            example: book
          PPN:
            type: string
            description: |
              Specifies a PPN.
            example: null
          author:
            type: string
            description: |
              Specifies an author's name.
            example: null
          editor:
            type: string
            description: |
              Specifies an editor's name.
          title:
            type: string
          address:
            type: string
          publisher:
            type: string
          year:
            type: integer
          year_min:
            type: integer
          year_max:
            type: integer
  responses:
    resourceNotFound:
      description: The specified resource could not be found.
    unexpectedError:
      description: An unexpected error occurred.
  schemas:
    record:
      type: string
      description: |
        Represents a single bibliographical record in the OAI DC format (based
        on the DublinCore XML representation).
      example: >
        <oai_dc:dc xmlns:dc="http://purl.org/dc/elements/1.1/"
        xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/
        http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
          <dc:title>...</dc:title>
          <dc:creator>...</dc:creator>
          <dc:subject>...</dc:subject>
          <dc:description>...</dc:description>
          <dc:publisher>...</dc:publisher>
          <dc:contributor>...</dc:contributor>
          <dc:date>...</dc:date>
          <dc:type>...</dc:type>
          <dc:format>...</dc:format>
          <dc:identifier></dc:identifier>
          <dc:relation>...</dc:relation>
          <dc:source>...</dc:source>
          <dc:language>...</dc:language>
          <dc:coverage>...</dc:coverage>
          <dc:rights>...</dc:rights>
        </oai_dc:dc>
    listOfRecords:
      type: object
      description: |
        Represents a list of bibliographical records together with its associated metadata.
      properties:
        query:
          type: string
          description: |
            Contains the complete query string as processed by the web-service. Implementations are allowed to normalize query strings to adjust to site-specific restrictions prior to evaluation. The returned `query`  must reflect these modifications.
        total:
          type: integer
          minimum: 0
          example: 13
          description: |
            Specifies the total number of records found according to the specified `properties`. Limitations affecting the actual list of records returned (`records`) are not considered (i. e. `limit` and `offet` parameters are ignored).
        count:
          type: integer
          minimum: 0
          example: 2
          description: |
            Specifies the number of records contained in the returned list of records (`records`).
        offset:
          type: integer
          minimum: 0
          example: 6
          description: |
            Specifies the actual offset within the `listOfRecords`. The `offset` may be adjusted by the web-service to reflect site-specific restrictions.
        records:
          type: array
          description: |
            Contains all records that are returned upon the given `query`.
          items:
            $ref: '#/components/schemas/record'
    webserviceMetadata:
      type: object
      description: |
        Contains a list of properties for the web-service.
      properties:
        name:
          type: string
          description: |
            Specifies the name of the web-service.
          example: zhistlex-bibl-server  
        version:
          type: string
          description: |
            Specifies the version of the web-service.
          example: 0.1.17
        canonical_adress:
          type: string
          description: |
            Specifies the canonical adress for the web-service.
          example: https://api.zhistlex.de/bibl-server
    renderedResponse:
      type: string
      description: |
        Contains a site-specific human-readable redering of the return data in HTML.
      example: >
        <html>
          <title>ZHistList-Abfrageergebnis</title>
          <body>
            <h1>Abfrageergebnis</h1>
            <p>...</p>
          </body>
        </html>